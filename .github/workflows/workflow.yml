name: Workflow CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=version::${TAG%-*}
          else
            echo ::set-output name=version::unstable
          fi
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm64
          echo ::set-output name=docker_username::${{ secrets.DOCKER_HUB_LOGIN }}
          echo ::set-output name=docker_image::${{ secrets.DOCKER_HUB_LOGIN }}/coffee-pot

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker login
        run: |
          echo "${DOCKER_REGISTRY_PASSWORD}" | docker login -u "${DOCKER_REGISTRY_USERNAME}" --password-stdin
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_HUB_LOGIN }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build
        run: mvn -B package --file pom.xml

      - name: Run Buildx
        if: success()
        run: |
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --label "org.label-schema.build-date=${{ steps.prepare.outputs.build_date }}" \
            --label "org.label-schema.version=${{ steps.prepare.outputs.version }}" \
            --label "org.label-schema.vcs-ref=${GITHUB_SHA::8}" \
            -t "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
            --push .

      - name: Docker logout
        run: |
          docker logout
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_HUB_LOGIN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          yml: ./codecov.yml
